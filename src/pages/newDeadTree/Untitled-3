    awaitF(tmpStorage) {
        for (var i = 0; i < tmpStorage.length;i++) {
                console.log("promise内部");
                this.base.showAlert(i, "第几个", () => { });
                var that = this;
                var element = tmpStorage[i];
                console.log(i);
                console.log(element);
                if (element.hasPic == true) {
                    // this.base.showAlert("有照片", "", () => { });
                    console.log(element);
                    console.log(element.photoSum);
                    let observer = that.httpClient.post(that.base.BASE_URL + 'app/addDeviceId', {},
                        {
                            headers: { token: localStorage['token'] }, params: {
                                deviceId: element.deviceId
                            }
                        }).subscribe(res => {
                            console.log(res);
                            for (var j = 1; j <= element.photoSum; j = j + 1) {
                                ((j) => {
                                    var currentImg;
                                    if (j == 1) {
                                        currentImg = that.photolib1;
                                    } else if (j == 2) {
                                        currentImg = that.photolib2;
                                    } else if (j == 3) {
                                        currentImg = that.photolib3;
                                    }
                                    that.j = j;
                                    //j是当前的图片库
                                    var imgPath = currentImg[that.i].img.split("/");
                                    console.log(imgPath[imgPath.length - 1]);
                                    let options: FileUploadOptions = {};
                                    options.fileKey = "image";
                                    var time = Date.parse(Date());
                                    options.fileName = time + ".jpg";
                                    options.mimeType = "image/jpeg";
                                    options.chunkedMode = false;
                                    options.httpMethod = "POST";
                                    options.params = {
                                        deviceId: element.deviceId, longitude: element.longitude, latitude: element.latitude, altitude: element.altitude,
                                        accuracy: element.accuracy, diameter: element.diameter, height: element.height, volume: element.volume,
                                        killMethodsValue: element.killMethodsValue, remarks: element.remarks, current: j, batch: element.batch
                                    };
                                    options.headers = { token: localStorage['token'] };
                                    console.log("options");
                                    console.log(options);
                                    const fileTransfer: FileTransferObject = that.fileTransfer.create();

                                    let observer = fileTransfer.upload(currentImg[that.i].img, that.base.BASE_URL + 'app/AddDeadtreePhoto', options)
                                        .then((res) => {
                                            console.log(res);
                                            console.log(JSON.stringify(res));
                                            console.log(JSON.parse(JSON.stringify(res)).message);

                                        }, (error) => {//发送失败(网络出错等)
                                            that.picNotExist = true;
                                            // this.base.showAlert('提示', '提交失败', () => { });
                                        }).catch((error) => {
                                            that.picNotExist = true;
                                        })

                                    that.observers.push(observer);

                                    if (that.picNotExist) {
                                        that.httpClient.post(that.base.BASE_URL + 'app/AddDeadtrees', {},
                                            {
                                                headers: { token: localStorage['token'] }, params: {
                                                    deviceId: element.deviceId, longitude: element.longitude, latitude: element.latitude, altitude: element.altitude,
                                                    accuracy: element.accuracy, diameter: element.diameter, height: element.height, volume: element.volume,
                                                    killMethodsValue: element.killMethodsValue, remarks: element.remarks, batch: element.batch
                                                }
                                            })
                                            .subscribe(res => {
                                                console.log(JSON.stringify(res));
                                                console.log(JSON.parse(JSON.stringify(res)).message);
                                            }, (msg) => {
                                                // this.base.showAlert('提示', '提交失败', () => { });
                                            });
                                    }

                                })(j)
                            }

                            Promise.all(that.observers).then((res) => {
                                console.log(res);
                                that.base.showAlert("全部成功了", "", () => { });
                                that.httpClient.post(that.base.BASE_URL + 'app/AddDeadtrees', {},
                                    {
                                        headers: { token: localStorage['token'] }, params: {
                                            deviceId: element.deviceId, longitude: element.longitude, latitude: element.latitude, altitude: element.altitude,
                                            accuracy: element.accuracy, diameter: element.diameter, height: element.height, volume: element.volume,
                                            killMethodsValue: element.killMethodsValue, remarks: element.remarks, batch: element.batch
                                        }
                                    })
                                    .subscribe(res => {
                                        console.log(JSON.stringify(res));
                                        console.log(JSON.parse(JSON.stringify(res)).message);
                                        // this.base.showAlert('提示', '提交成功', () => { });
                                        // that.i++;
                                        // if (that.i >= tmpStorage.length)
                                        //     localStorage.removeItem('deadCache');
                                    }, (msg) => {
                                        // this.base.showAlert('提示', '提交失败', () => { });
                                    });
                            })
                        })


                } else {
                    let obsernoPic = that.httpClient.post(that.base.BASE_URL + 'app/AddDeadtrees', {},
                        {
                            headers: { token: localStorage['token'] }, params: {
                                deviceId: element.deviceId, longitude: element.longitude, latitude: element.latitude, altitude: element.altitude,
                                accuracy: element.accuracy, diameter: element.diameter, height: element.height, volume: element.volume,
                                killMethodsValue: element.killMethodsValue, remarks: element.remarks, batch: element.batch
                            }
                        })
                        .subscribe(res => {
                            console.log(JSON.stringify(res));
                            console.log(JSON.parse(JSON.stringify(res)).message);
                            // this.base.showAlert('提示', '提交成功', () => { });
                            // that.i++;
                            // if (that.i >= tmpStorage.length)
                            //     localStorage.removeItem('deadCache');
                        }, (msg) => {
                            // this.base.showAlert('提示', '提交失败', () => { });
                        });

                }
        
        }
    }